name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        toolchains: ["stable", "nightly"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: wasm32-unknown-unknown
          toolchain: ${{ matrix.toolchain }}
          components: clippy, rustfmt

      - uses: actions/checkout@v2
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          command: build
      
      - name: Build no_std
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          command: test
          args: --no-default-features
          
      - name: Build wasm
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          command: test
          args: --no-default-features --target wasm32-unknown-unknown

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          command: test
          args: --all-features
